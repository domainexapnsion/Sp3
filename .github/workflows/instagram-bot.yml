name: Instagram DM Repost Bot

on:
  schedule:
    - cron: '0 */4 * * *'  # Run every 4 hours
  workflow_dispatch:      # Allow manual runs

jobs:
  repost-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            libjpeg-dev \
            zlib1g-dev \
            libwebp-dev
          
      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade \
            instagrapi \
            requests \
            pydantic \
            python-dotenv \
            pillow>=8.1.1  # Explicitly add Pillow
          
      - name: Verify installation
        run: |
          python -c "import instagrapi; print(f'instagrapi version: {instagrapi.__version__}')"
          python -c "import PIL; print(f'Pillow version: {PIL.__version__}')"
          
      - name: Create required files
        run: |
          touch bot.log
          echo "[]" > processed_messages.json
          
      - name: Run Instagram repost bot
        env:
          INSTAGRAM_USERNAME: ${{ secrets.INSTAGRAM_USERNAME }}
          INSTAGRAM_PASSWORD: ${{ secrets.INSTAGRAM_PASSWORD }}
          PYTHONPATH: ${{ github.workspace }}
          PYTHONUNBUFFERED: 1
        run: |
          timeout 900 python bot.py || echo "Bot completed or timed out"
          
      - name: Show bot logs
        if: always()
        run: |
          echo "=== BOT LOG ==="
          cat bot.log || echo "No bot.log found"
          echo "=== PROCESSED MESSAGES ==="
          cat processed_messages.json || echo "No processed_messages.json found"
          
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bot-logs-${{ github.run_number }}
          path: |
            *.log
            *.json
          retention-days: 7
          
      - name: Clean up
        if: always()
        run: |
          rm -f session.json || true
          rm -f *.log || true